{"version":3,"sources":["components/App/logo.svg","serviceWorker.js","components/GlobalStyle.styled.js","components/App/App.styled.js","components/App/App.js","components/RestaurantsList/RestaurantsList.styled.js","components/RestaurantsList/RestaurantsList.js","components/RestaurantsMap/RestaurantsMap.styled.js","components/RestaurantsMap/RestaurantsMap.js","containers/App/App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","GlobalStyle","createGlobalStyle","Root","styled","div","AppLogo","img","attrs","src","logo","alt","Header","header","Body","main","SectionLeft","section","SectionRightWrapper","SlideContent","SectionRight","React","forwardRef","ref","children","displayName","propTypes","PropTypes","oneOfType","string","arrayOf","node","isRequired","App","leftSide","rightSide","List","ul","Item","li","Button","button","type","Card","onClick","func","defaultProps","RestaurantList","this","props","restaurants","onClickRestaurant","map","restaurant","data-id","id","key","e","restaurantName","className","renderRestaurants","Component","MapContainer","GettingCurrentPosition","RestaurantsMap","updateCurrentPositionMarker","google","maps","Animation","Marker","navigator","geolocation","setState","gettingCurrentPosition","getCurrentPosition","coords","position","lat","latitude","lng","longitude","setTimeout","animation","DROP","title","addListener","setZoom","setCenter","getPosition","updateRestaurantMarkers","restaurantMarkers","Point","Size","InfoWindow","filter","p","Array","from","keys","includes","forEach","iPlace","image","url","size","origin","anchor","scaledSize","marker","icon","contentString","infoWindow","content","values","r","close","open","set","mapRef","createRef","Map","state","GoogleMap","current","center","zoom","prevProps","selectedRestaurant","updateRestaurants","updateSelectedRestaurant","prevState","snapshot","console","log","trigger","event","get","gettingCurrentPositionIndicator","renderGettingCurrentPositionIndicator","handleClickRestaurant","fetch","then","json","renderMap","list","renderList","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1b2c3391.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7e873e41.svg\";","/* eslint-disable no-console */\n/* eslint-disable no-param-reassign */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated pre-cached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been pre-cached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}`;\n\nexport default GlobalStyle;\n","import React from 'react';\n\nimport styled from 'styled-components';\n\nimport PropTypes from 'prop-types';\n\nimport logo from './logo.svg';\n\nconst Root = styled.div`\n  text-align: center;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  font-size: calc(8px + 2vmin);\n  color: white;\n`;\n\nconst AppLogo = styled.img.attrs({\n  src: logo,\n  alt: 'logo'\n})`\n  height: 48px;\n  pointer-events: none;\n\n  @keyframes App-logo-spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n\n  @media (prefers-reduced-motion: no-preference) {\n    & {\n      animation: App-logo-spin infinite 4s linear;\n    }\n  }\n`;\n\nconst Header = styled.header`\n  width: 100%;\n  background-color: #282c34;\n  height: 15vh;\n  padding-top: 20px;\n  p {\n    margin: 5px 0px;\n  }\n`;\n\nconst Body = styled.main`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  box-sizing: border-box;\n`;\n\nconst SectionLeft = styled.section`\n  background-color: orange;\n  width: 70%;\n  height: 85vh;\n  overflow-x: hidden;\n  position: relative;\n`;\n\nconst SectionRightWrapper = styled.section`\n  background-color: #8c92ac;\n  width: 30%;\n  height: 85vh;\n  overflow-x: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SlideContent = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  width: 100%;\n  height: 100%;\n  overflow-y: auto;\n  > * {\n    transition: all 0.4s cubic-bezier(0.215, 0.61, 0.355, 1);\n    visibility: hidden;\n    width: 0;\n\n    &.selected {\n      visibility: visible;\n      width: 100%;\n      margin-left: 0px;\n    }\n\n    &:first-child:not(.selected) {\n      width: 100%;\n      margin-left: -100%;\n    }\n  }\n`;\n\nconst SectionRight = React.forwardRef(({ children }, ref) => (\n  <SectionRightWrapper>\n    <SlideContent ref={ref}>{children}</SlideContent>\n  </SectionRightWrapper>\n));\n\nSectionRight.displayName = 'SectionRight';\n\nSectionRight.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\nexport default { Root, AppLogo, Header, Body, SectionLeft, SectionRight };\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport s from './App.styled';\n\nfunction App({ leftSide, rightSide }) {\n  return (\n    <s.Root>\n      <s.Header>\n        <s.AppLogo />\n        <p>Restaurant review.</p>\n      </s.Header>\n      <s.Body>\n        <s.SectionLeft>{leftSide}</s.SectionLeft>\n        <s.SectionRight>{rightSide}</s.SectionRight>\n      </s.Body>\n    </s.Root>\n  );\n}\n\nApp.propTypes = {\n  leftSide: PropTypes.node.isRequired,\n  rightSide: PropTypes.node.isRequired\n};\n\nexport default App;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 15px 0 0 0;\n  overflow-x: hidden;\n  overflow-y: auto;\n`;\n\nconst Item = styled.li`\n  list-style: none;\n  width: 100%;\n  margin: 0 0 10px 0;\n`;\n\nconst Button = styled.button.attrs({ type: 'button' })`\n  background-color: #fff;\n  border-radius: 4px;\n  box-shadow: 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n    0 1px 5px 0 rgba(0, 0, 0, 0.12);\n  color: rgba(0, 0, 0, 0.87);\n  overflow: hidden;\n  border: none;\n  font: inherit;\n  width: calc(100% - 20px);\n  min-height: 50px;\n  &::after {\n    clear: both;\n  }\n  &::after,\n  &::before {\n    content: '';\n    display: block;\n  }\n\n  &:focus {\n    background-color: gray;\n  }\n\n  &:hover {\n    background-color: lightgray;\n    cursor: pointer;\n  }\n`;\n\nconst Card = React.forwardRef(({ onClick, children }, ref) => (\n  <Item>\n    <Button onClick={onClick} ref={ref}>\n      {children}\n    </Button>\n  </Item>\n));\n\nCard.displayName = 'RestaurantsListCard';\n\nCard.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ]).isRequired\n};\n\nCard.defaultProps = {\n  onClick: () => {}\n};\n\nexport default {\n  List,\n  Card\n};\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport s from './RestaurantsList.styled';\n\nexport default class RestaurantList extends Component {\n  renderRestaurants() {\n    const { restaurants, onClickRestaurant } = this.props;\n    return restaurants.map(restaurant => (\n      <s.Card\n        data-id={restaurant.id}\n        key={restaurant.id}\n        onClick={e => {\n          onClickRestaurant(restaurant, e);\n        }}\n      >\n        {restaurant.restaurantName}\n      </s.Card>\n    ));\n  }\n\n  render() {\n    const { className } = this.props;\n    const restaurants = this.renderRestaurants();\n    return <s.List className={className}>{restaurants}</s.List>;\n  }\n}\n\nRestaurantList.propTypes = {\n  restaurants: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      restaurantName: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  onClickRestaurant: PropTypes.func.isRequired,\n  className: PropTypes.string.isRequired\n};\n","import styled from 'styled-components';\n\nconst MapContainer = styled.div`\n  height: 100%;\n`;\n\nconst GettingCurrentPosition = styled.div`\n  color: gray;\n  position: absolute;\n  top: 15px;\n  left: 50%;\n  transform: translateX(-50%);\n  z-index: 2000;\n`;\n\nexport default {\n  MapContainer,\n  GettingCurrentPosition\n};\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport s from './RestaurantsMap.styled';\n\nexport default class RestaurantsMap extends Component {\n  constructor(props) {\n    super(props);\n    this.mapRef = React.createRef();\n    this.map = null;\n    this.restaurantMarkers = new Map();\n    this.state = {\n      gettingCurrentPosition: false\n    };\n  }\n\n  componentDidMount() {\n    const {\n      google: {\n        maps: { Map: GoogleMap }\n      }\n    } = window;\n\n    this.map = new GoogleMap(this.mapRef.current, {\n      center: { lat: 20.6995456, lng: -103.35027199999999 },\n      zoom: 13\n    });\n\n    this.updateCurrentPositionMarker();\n    this.updateRestaurantMarkers();\n  }\n\n  getSnapshotBeforeUpdate(prevProps) {\n    const { restaurants, selectedRestaurant } = this.props;\n\n    if (prevProps.restaurants !== restaurants) {\n      return { updateRestaurants: true };\n    }\n\n    if (prevProps.selectedRestaurant !== selectedRestaurant && selectedRestaurant) {\n      return { updateSelectedRestaurant: true };\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // eslint-disable-next-line no-console\n    console.log('trying updating');\n    if (snapshot && snapshot.updateRestaurants) {\n      // eslint-disable-next-line no-console\n      console.log('updating');\n      this.updateRestaurantMarkers();\n    }\n\n    if (snapshot && snapshot.updateSelectedRestaurant) {\n      const {\n        selectedRestaurant: { id }\n      } = this.props;\n      const {\n        google: {\n          maps: {\n            event: { trigger }\n          }\n        }\n      } = window;\n\n      trigger(this.restaurantMarkers.get(id).marker, 'click');\n    }\n  }\n\n  updateCurrentPositionMarker = () => {\n    const { map } = this;\n    const {\n      google: {\n        maps: { Animation, Marker }\n      }\n    } = window;\n\n    if (navigator.geolocation) {\n      this.setState({ gettingCurrentPosition: true });\n      navigator.geolocation.getCurrentPosition(({ coords: { latitude: lat, longitude: lng } }) => {\n        const position = {\n          lat,\n          lng\n        };\n        setTimeout(() => {\n          this.setState({ gettingCurrentPosition: false });\n          const currentPositionMarker = new Marker({\n            map,\n            position,\n            animation: Animation.DROP,\n            title: 'Your position'\n          });\n          currentPositionMarker.addListener('click', function currentPositionMarkerClick() {\n            map.setZoom(13);\n            map.setCenter(this.getPosition());\n          });\n        }, 400);\n\n        map.setCenter(position);\n      });\n    }\n  };\n\n  updateRestaurantMarkers = () => {\n    const {\n      map,\n      restaurantMarkers,\n      props: { restaurants }\n    } = this;\n    const {\n      google: {\n        maps: { Point, Size, Marker, Animation, InfoWindow }\n      }\n    } = window;\n\n    restaurants\n      .filter(p => !Array.from(restaurantMarkers.keys()).includes(p.id))\n      .forEach((restaurant, iPlace) => {\n        const { id, restaurantName, position } = restaurant;\n        const image = {\n          url: 'http://localhost:3000/restaurant-review/static/media/logo.7e873e41.svg',\n          size: new Size(64, 64),\n          origin: new Point(0, 0),\n          anchor: new Point(17, 34),\n          scaledSize: new Size(25, 25)\n        };\n\n        setTimeout(() => {\n          const marker = new Marker({\n            map,\n            position,\n            icon: image,\n            title: restaurantName,\n            animation: Animation.DROP\n          });\n          const contentString = `<img\n              src=\"https://maps.googleapis.com/maps/api/streetview?size=400x400&location=${position.lat},${position.lng}&fov=80&heading=70&pitch=0&key=AIzaSyBwYHIy3nSGNk4Tm-HfoXQpOHbGEyA-RmA\"\n              alt=\"\"\n            />\n          `;\n\n          const infoWindow = new InfoWindow({\n            content: contentString\n          });\n\n          marker.addListener('click', function restaurantMarkerClick() {\n            this.map.setZoom(13);\n            this.map.setCenter(this.getPosition());\n            Array.from(restaurantMarkers.values())\n              .filter(r => r.id !== id)\n              .forEach(({ infoWindow: iw }) => iw.close());\n            setTimeout(() => {\n              infoWindow.open(this.map, marker);\n            }, 100);\n          });\n\n          restaurantMarkers.set(id, { ...restaurant, marker, infoWindow });\n        }, 600 + 20 * iPlace);\n      });\n  };\n\n  renderGettingCurrentPositionIndicator() {\n    const { gettingCurrentPosition } = this.state;\n    if (gettingCurrentPosition) {\n      return (\n        <s.GettingCurrentPosition>\n          Getting current location from your device&nbsp;...\n        </s.GettingCurrentPosition>\n      );\n    }\n\n    return null;\n  }\n\n  render() {\n    const gettingCurrentPositionIndicator = this.renderGettingCurrentPositionIndicator();\n    return (\n      <>\n        {gettingCurrentPositionIndicator}\n        <s.MapContainer ref={this.mapRef} />\n      </>\n    );\n  }\n}\n\nconst restaurantShape = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  restaurantName: PropTypes.string.isRequired,\n  position: PropTypes.shape({\n    lat: PropTypes.number.isRequired,\n    lng: PropTypes.number.isRequired\n  }).isRequired\n});\n\nRestaurantsMap.propTypes = {\n  restaurants: PropTypes.arrayOf(restaurantShape).isRequired,\n  selectedRestaurant: restaurantShape\n};\n\nRestaurantsMap.defaultProps = {\n  selectedRestaurant: null\n};\n","import React, { Component } from 'react';\n\nimport AppComponent from '../../components/App';\nimport RestaurantsList from '../../components/RestaurantsList';\nimport RestaurantsMap from '../../components/RestaurantsMap';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      restaurants: [],\n      selectedRestaurant: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('/restaurant-review/api/restaurants.json')\n      .then(r => r.json())\n      .then(restaurants => this.setState({ restaurants }));\n  }\n\n  handleClickRestaurant = selectedRestaurant => {\n    this.setState({ selectedRestaurant });\n  };\n\n  renderMap() {\n    const { restaurants, selectedRestaurant } = this.state;\n    return <RestaurantsMap restaurants={restaurants} selectedRestaurant={selectedRestaurant} />;\n  }\n\n  renderList() {\n    const { restaurants, selectedRestaurant } = this.state;\n    return (\n      <>\n        <RestaurantsList\n          className={selectedRestaurant ? '' : 'selected'}\n          restaurants={restaurants}\n          onClickRestaurant={this.handleClickRestaurant}\n        />\n        <div className={selectedRestaurant ? 'selected' : ''}>\n          <button type=\"button\" onClick={() => this.setState({ selectedRestaurant: null })}>\n            Form\n          </button>\n        </div>\n      </>\n    );\n  }\n\n  render() {\n    const map = this.renderMap();\n    const list = this.renderList();\n    return <AppComponent leftSide={map} rightSide={list} />;\n  }\n}\n","import React from 'react';\n\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport GlobalStyle from './components/GlobalStyle.styled';\nimport App from './containers/App';\n\nReactDOM.render(\n  <>\n    <GlobalStyle />\n    <App />\n  </>,\n  document.getElementById('app-render')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls. More documentation.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}